package com.sydney.microservice.models;

// Generated 18 mai 2017 16:00:40 by Hibernate Tools 4.3.1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAccessType;
import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlTransient;

/**
 * User generated by hbm2java
 */
@Entity
@Table(name = "user", catalog = "placetosee", uniqueConstraints = @UniqueConstraint(columnNames = "email"))
@XmlRootElement
@XmlAccessorType(XmlAccessType.FIELD)
public class User implements java.io.Serializable {

	/**
	 *
	 */
	private static final long serialVersionUID = -3537475630786345292L;
	private Integer userId;
	private String role;
	private String nom;
	private String prenom;
	private String hashedPassword;
	private String email;
	private Date dateNaiss;
    @XmlTransient
	private Set<Preferences> preferenceses = new HashSet<Preferences>();
    @XmlTransient
	private Set<Visite> visites = new HashSet<Visite>();
    @XmlTransient
	private Set<Like> likes = new HashSet<Like>();

	public User() {
	}

	public User(String role, String nom, String prenom, String hashedPassword,
			String email) {
		this.role = role;
		this.nom = nom;
		this.prenom = prenom;
		this.hashedPassword = hashedPassword;
		this.email = email;
	}

	public User(String role, String nom, String prenom, String hashedPassword,
			String email, Date dateNaiss, Set<Preferences> preferenceses, Set<Visite> visites,
			Set<Like> likes) {
		this.role = role;
		this.nom = nom;
		this.prenom = prenom;
		this.hashedPassword = hashedPassword;
		this.email = email;
		this.dateNaiss = dateNaiss;
		this.preferenceses = preferenceses;
		this.visites = visites;
		this.likes = likes;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "user_id", unique = true, nullable = false)
	public Integer getUserId() {
		return this.userId;
	}

	public void setUserId(Integer userId) {
		this.userId = userId;
	}

	@Column(name = "role", nullable = false, length = 20)
	public String getRole() {
		return this.role;
	}

	public void setRole(String role) {
		this.role = role;
	}

	@Column(name = "nom", nullable = false, length = 50)
	public String getNom() {
		return this.nom;
	}

	public void setNom(String nom) {
		this.nom = nom;
	}

	@Column(name = "prenom", nullable = false, length = 50)
	public String getPrenom() {
		return this.prenom;
	}

	public void setPrenom(String prenom) {
		this.prenom = prenom;
	}

	@Column(name = "hashed_password", nullable = false, length = 1000)
	public String getHashedPassword() {
		return this.hashedPassword;
	}

	public void setHashedPassword(String hashedPassword) {
		this.hashedPassword = hashedPassword;
	}

	@Column(name = "email", unique = true, nullable = false, length = 100)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "date_naiss", length = 10)
	public Date getDateNaiss() {
		return this.dateNaiss;
	}

	public void setDateNaiss(Date dateNaiss) {
		this.dateNaiss = dateNaiss;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<Preferences> getPreferenceses() {
		return this.preferenceses;
	}

	public void setPreferenceses(Set<Preferences> preferenceses) {
		this.preferenceses = preferenceses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<Visite> getVisites() {
		return this.visites;
	}

	public void setVisites(Set<Visite> visites) {
		this.visites = visites;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<Like> getLikes() {
		return this.likes;
	}

	public void setLikes(Set<Like> likes) {
		this.likes = likes;
	}

}
