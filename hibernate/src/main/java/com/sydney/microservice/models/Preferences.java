package com.sydney.microservice.models;

// Generated 18 mai 2017 16:00:40 by Hibernate Tools 4.3.1

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * Preferences generated by hbm2java
 */
@Entity
@Table(name = "preferences", catalog = "placetosee")
public class Preferences implements java.io.Serializable {

	/**
	 *
	 */
	private static final long serialVersionUID = 5353887235004697893L;
	private PreferencesId id;
	private Typelieu typelieu;
	private User user;
	private boolean aime;

	public Preferences() {
	}

	public Preferences(PreferencesId id, Typelieu typelieu, User user,
			boolean aime) {
		this.id = id;
		this.typelieu = typelieu;
		this.user = user;
		this.aime = aime;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "userId", column = @Column(name = "user_id", nullable = false)),
			@AttributeOverride(name = "type", column = @Column(name = "type", nullable = false, length = 100)) })
	public PreferencesId getId() {
		return this.id;
	}

	public void setId(PreferencesId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "type", nullable = false, insertable = false, updatable = false)
	public Typelieu getTypelieu() {
		return this.typelieu;
	}

	public void setTypelieu(Typelieu typelieu) {
		this.typelieu = typelieu;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "user_id", nullable = false, insertable = false, updatable = false)
	public User getUser() {
		return this.user;
	}

	public void setUser(User user) {
		this.user = user;
	}

	@Column(name = "aime", nullable = false)
	public boolean isAime() {
		return this.aime;
	}

	public void setAime(boolean aime) {
		this.aime = aime;
	}

}
